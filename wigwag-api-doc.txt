wigwag.me{"props":{"pageProps":{"spec":{"openapi":"3.0.0","basePath":"https://just.wigwag.me","info":{"title":"WigWag API","version":"1.0","description":"Welcome to the WigWag API docs. This API will enable you to programmatically create, view and manage your WigWag payments.\u003cbr\u003eAll routes below are relative to https://just.wigwag.me"},"security":[{"Bearer":[]}],"tags":[{"name":"Authentication","description":"Generate a short-lived (15min) token for use on the API."},{"name":"Payment Links","description":"Create and view payment links"},{"name":"Card Consent","description":"Save and charge cards. Not available by default. Please contact jayde@wigwag.me to get access.\nIn order to use this feature, please use a token with the client_recurringpaymentconsentrequest scope"},{"name":"Subscriptions","description":"Create subscriptions to charge fees on a schedule. Not available by default. Please contact jayde@wigwag.me to get access.\nIn order to use this feature, please use a token with the client_recurringpaymentconsentrequest scope"},{"name":"Payments","description":"Payments are created when money starts to move. This can be from any of our methods i.e. Links, Consents, Subscriptions"},{"name":"Fees","description":"View fees"},{"name":"Withdrawal","description":"Withdraw funds from your WigWag balance"},{"name":"Account","description":"Manage and view WigWag account specific details"}],"components":{"securitySchemes":{"Bearer":{"type":"http","scheme":"bearer"}},"schemas":{"Yearly":{"type":"object","properties":{"frequency":{"type":"string","value":"YEARLY"},"interval":{"type":"number","format":"integer","description":"An integer value representing how many units of frequency are skipped between occurrences. i.e. interval 3 means every 3 years","required":false},"byMonth":{"type":"number","description":"An integer value representing the specific month from 1-12"},"byMonthDay":{"type":"number","description":"An integer value representing the specific day of the month from 1-31"}}},"Monthly":{"type":"object","properties":{"frequency":{"type":"string","value":"MONTHLY"},"interval":{"type":"number","format":"integer","description":"An integer value representing how many units of frequency are skipped between occurrences. i.e. interval 3 means every 3 months","required":false},"byMonthDay":{"type":"number","description":"An integer value representing the specific day of the month from 1-31"}}},"Weekly":{"type":"object","properties":{"frequency":{"type":"string","value":"WEEKLY"},"interval":{"type":"number","format":"integer","description":"An integer value representing how many units of frequency are skipped between occurrences. i.e. interval 3 means every 3 weeks","required":false},"byWeekDay":{"type":"string","enum":["MO","TU","WE","TH","FR","SA","SU"],"description":" MO - Monday\n TU - Tuesday\n WE - Wednesday\n TH - Thursday\n FR - Friday\n SA - Saturday\n SU - Sunday"}}},"PaymentLinkStatus":{"type":"string","enum":["PENDING","EXPIRED","PAID","SETTLED","CANCELLED"],"description":"* PENDING - The initial status of a payment that was just created\n* EXPIRED - The payment has passed it's expiry time\n* PAID - The payment has been paid by the user\n* SETTLED - We have allocated the payment to the WigWag merchant balance\n* CANCELLED - This payment was cancelled. Unable to be completed"},"PaymentType":{"type":"string","enum":["SUBSCRIPTION","CONSENT","LINK"],"description":"* SUBSCRIPTION - The payment was created via a Subscription\n* CONSENT - The payment was created via a Consent Request\n* LINK - The payment was created via a Payment Link"},"PaymentStatus":{"type":"string","enum":["PAID","SETTLED"],"description":"* PAID - The payment has been paid by the user\n* SETTLED - We have allocated the payment to the WigWag merchant balance"},"RefundStatus":{"type":"string","enum":["FAILED","PROCESSED"],"description":"* PROCESSED - The refund has been processed\n* FAILED - The refund was not processed"},"WithdrawalType":{"type":"string","enum":["INSTANT","DEFAULT"],"description":"* INSTANT - Will be disbursed within the hour\n* DEFAULT - Will be disbursed within the next 3 working days"},"FeeType":{"type":"string","enum":["PAYMENT_LINKS","WITHDRAWAL"],"description":"* PAYMENT_LINKS - The fee charged when settling payments to your WigWag balance\n* WITHDRAWAL - The fee charged when withdrawing funds from your WigWag balance"},"Fee":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"type":{"$ref":"#/components/schemas/FeeType"},"amount":{"type":"number","format":"integer","description":"Fee amount in CENTS"},"paymentId":{"type":"string"},"createdAt":{"type":"string","format":"datetime"},"statementId":{"type":"string","format":"uuid"}}},"InputError":{"type":"object","properties":{"success":{"type":"boolean","example":false},"generalErrors":{"type":"array","items":{"type":"string"}},"fieldErrors":{"type":"object","properties":{"fieldOne":{"type":"array","items":{"type":"string"}},"fieldTwo":{"type":"array","items":{"type":"string"}}}}}},"Payment":{"type":"object","properties":{"id":{"type":"string"},"amount":{"type":"string","description":"The payment amount in cents"},"paidAt":{"type":"string","format":"date-time"},"status":{"$ref":"#/components/schemas/PaymentStatus"},"type":{"$ref":"#/components/schemas/PaymentType"},"fee":{"oneOf":[{"$ref":"#/components/schemas/Fee"},{"type":"null"}],"description":"Will only have a fee once the payment is settled"},"cardDetail":{"type":"object","properties":{"last4":{"type":"string"},"bin":{"type":"string"},"expiryMonth":{"type":"integer"},"expiryYear":{"type":"integer"}}}}},"Refund":{"type":"object","properties":{"id":{"type":"string"},"amount":{"type":"string","description":"The refund amount in cents"},"status":{"$ref":"#/components/schemas/RefundStatus"},"paymentId":{"type":"string","description":"The id of the payment that was refunded"}}},"BankDetails":{"type":"object","properties":{"name":{"type":"string","description":"The name of the account holder. Either the business name or the individual's name."},"bankId":{"$ref":"#/components/schemas/BankId"},"accountNumber":{"type":"string"}}},"BankId":{"type":"string","enum":["ABSA","CAPITEC","FNB","NEDBANK","STANDARD_BANK","TYMEBANK","INVESTEC","MERCANTILE","ACCESS_BANK","DISCOVERY_BANK","BANK_ZERO","BIDVEST"]},"PaymentLink":{"type":"object","properties":{"id":{"type":"string"},"amount":{"type":"integer","description":"The payment amount in cents"},"status":{"$ref":"#/components/schemas/PaymentLinkStatus"},"paidAt":{"type":"string","format":"date-time"},"payerName":{"type":"string"},"link":{"type":"string","format":"url","example":"https://just.wigwag.me/DjbyqE"},"merchantReference":{"type":"string","description":"A reference internal to the platform. Will not show up on any bank statements. Must be less than or equal to 50 characters."},"expireAt":{"type":"string","format":"date-time"},"deliveryDetails":{"$ref":"#/components/schemas/DeliveryDetail","required":false}}},"ConsentRequestStatus":{"type":"string","enum":["PENDING","CONSENTED"],"description":"* PENDING - The user still needs to enter their card details\n* CONSENTED - This consent is ready for use"},"ConsentRequest":{"type":"object","properties":{"id":{"type":"string","format":"uuid"},"url":{"type":"string","format":"url","example":"https://just.wigwag.me/card-consent/1234-1234-1234-1234"},"status":{"$ref":"#/components/schemas/ConsentRequestStatus"},"payments":{"type":"array","items":{"$ref":"#/components/schemas/Payment"}}}},"DeliveryDetail":{"type":"object","properties":{"firstName":{"type":"string","example":"John"},"lastName":{"type":"string","example":"Doe"},"phoneNumber":{"type":"string","example":"088 345 1111"},"deliveryFee":{"type":"integer","example":100,"description":"Delivery fee in cents"},"addressDetails":{"type":"object","properties":{"city":{"type":"string","example":"Capetown"},"suburb":{"type":"string","example":"Woodstock"},"address":{"type":"string","example":"123 Main Road"},"postCode":{"type":"string","example":"1234"},"company":{"type":"string","example":"WigWag"},"country":{"type":"string","example":"South Africa"}},"description":"Extra delivery information"}}},"Subscription":{"type":"object","properties":{"id":{"type":"string","example":"xxxxxxxxx"},"url":{"type":"string","example":"https://just.wigwag.me/subscribe/xxxxxxx"},"amount":{"type":"integer","example":10000},"merchantReference":{"type":"string"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"status":{"type":"string","enum":["EXPIRED","AUTHORISED","FAILED","UNAUTHORISED","CANCELLED"],"description":"The status of the subscription"},"payerFullName":{"type":"string","example":"John Doe"},"email":{"type":"string","example":"johndoe@gmail.com"},"payerId":{"type":"string","example":"1234-1234-1234-1234"}}}}},"paths":{"/api/v1/account/balance":{"get":{"tags":["Account"],"description":"Get balance of WigWag account","summary":"Get balance of WigWag account in cents","responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"balance":{"type":"number","example":100}}}}}}}},"401":{"description":"Invalid credentials"},"403":{"description":"Token expired"},"500":{"description":"Failed to fetch balance"}}}},"/api/v1/account/bank-details":{"get":{"tags":["Account"],"description":"Get the verified bank account details for your merchant","summary":"Get the verified bank account details for your merchant","responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"bankDetails":{"$ref":"#/components/schemas/BankDetails"}}}}}}}},"401":{"description":"Invalid credentials"},"403":{"description":"Token expired"},"404":{"description":"Bank details not found"},"500":{"description":"Failed to fetch balance"}}}},"/api/v1/card-consents/{consentRequestId}":{"get":{"tags":["Card Consent"],"summary":"Retrieve a card consent by ID","description":"Retrieve a card consent by ID. Great for checking the status.","parameters":[{"in":"path","name":"consentRequestId","schema":{"type":"string"},"required":true,"description":"The ID of the consent request"}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"cardConsent":{"$ref":"#/components/schemas/ConsentRequest"}}}}}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"404":{"description":"Consent request not found"},"500":{"description":"Something went wrong"}}}},"/api/v1/card-consents/{consentRequestId}/initiate-payment":{"post":{"tags":["Card Consent"],"summary":"Initiate a payment using a consent request","description":"Initiate a payment using a consent request. Can only be used with consents who have been granted. If interaction is required we will return status PENDING and an interaction URL to which to send the user. CAUTION: this URL will action the payment amount specified in the request.","parameters":[{"in":"path","name":"consentRequestId","schema":{"type":"string"},"required":true,"description":"The ID of the consent request"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"amount":{"type":"number","format":"integer","description":"the amount to charge in CENTS"}}}}}},"responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"payment":{"$ref":"#/components/schemas/Payment"}}}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"404":{"description":"Consent request not found"},"500":{"description":"Something went wrong"}}}},"/api/v1/card-consents":{"post":{"tags":["Card Consent"],"summary":"Create a new Consent Request","description":"Create a new Consent Request to save and charge cards at a later time.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"payerFullName":{"type":"string","example":"Joe Soap"},"email":{"type":"string","format":"email"},"payerId":{"type":"string","example":"1234-1234-1234-1234"},"initialAmount":{"type":"number"}}}}}},"responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/ConsentRequest"}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"404":{"description":"Consent request not found"},"500":{"description":"Something went wrong"}}}},"/api/v1/fees":{"get":{"tags":["Fees"],"description":"Get fees that were charged to your account","summary":"Get fees that were charged to your account","responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"fees":{"type":"array","items":{"$ref":"#/components/schemas/Fee"}}}}}}}}},"400":{"description":"Invalid query"},"401":{"description":"Invalid credentials"},"403":{"description":"Token expired"},"500":{"description":"Failed to fetch fees"}}}},"/api/v1/payment-links/{paymentId}/delivery-detail":{"post":{"tags":["Payment Links"],"description":"Adds delivery details to a payment link","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"deliveryFee":{"type":"integer","description":"The Delivery Fee in Cents","example":100}}}}}},"parameters":[{"in":"path","name":"paymentId","schema":{"type":"string"},"required":true,"description":"WigWag Payment ID of the payment"}]},"get":{"tags":["Payment Links"],"summary":"Retrieves a payment link's delivery details","description":"Retrieves a payment link's delivery details","parameters":[{"in":"path","name":"paymentId","schema":{"type":"string"},"required":true,"description":"WigWag Payment ID of the payment"}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"deliveryDetail":{"$ref":"#/components/schemas/DeliveryDetail"}}}}}}}},"400":{"description":"Invalid ID"},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"404":{"description":"Payment link not found'"},"500":{"description":"Something went wrong"}}}},"/api/v1/payment-links/{paymentId}":{"get":{"tags":["Payment Links"],"summary":"Get a payment link by ID","description":"Retrieves a payment","parameters":[{"in":"path","name":"paymentId","schema":{"type":"string"},"required":true,"description":"WigWag Payment ID of the payment"}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"payment":{"$ref":"#/components/schemas/PaymentLink"}}}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"404":{"description":"Payment not found"},"500":{"description":"Something went wrong"}}}},"/api/v1/payment-links":{"post":{"tags":["Payment Links"],"summary":"Create a payment link","description":"Creates a payment request. Use the link to send your payer through our payment flow. You can optionally append one of your redirect URLs to send the user somewhere after completing the payment. \u003cbr/\u003ee.g **https://just.wigwag.me/pay/12345?redirect_url=https%3A%2F%2Fexample.com%2Fcallback**","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"amount":{"type":"integer","description":"The payment amount in cents"},"merchantReference":{"type":"string","description":"A reference internal to the platform. Will not show up on any bank statements.","maxLength":50},"expiresAt":{"type":"string","format":"date-time"},"payerName":{"type":"string","maxLength":40},"collectDeliveryDetails":{"type":"boolean"},"skipCheckoutPage":{"type":"boolean","default":false,"optional":true,"description":"Makes the payer skip the checkout and delivery details forms"},"deliveryFee":{"type":"integer","description":"The delivery fee in cents. *NB*: if not provided but `collectDeliveryDetails` is provided the delivery fee will be assumed to be included in the payment amount\n"}}}}}},"responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"payment":{"$ref":"#/components/schemas/PaymentLink"}}}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"404":{"description":"Payment not found"},"500":{"description":"Something went wrong"}}},"get":{"tags":["Payment Links"],"summary":"Query for payment links","description":"Retrieve an array of payment links based on the provided query parameters","parameters":[{"in":"query","name":"startTime","schema":{"type":"string","format":"date-time"},"description":"The start time of the request window, in ISO date format. Payment links created at or after this time will be returned.","example":"2024-01-08T10:40:46.581Z"},{"in":"query","name":"endTime","schema":{"type":"string","format":"date-time"},"description":"The end time of the request window, in ISO date format. Payment links created at or before this time will be returned.","example":"2024-01-10T10:39:46.581Z"},{"in":"query","name":"status","schema":{"type":"array","style":"simple","items":{"$ref":"#/components/schemas/PaymentLinkStatus"}},"description":"Status of the payment links."},{"in":"query","name":"limit","schema":{"type":"integer"},"example":100,"description":"The maximum number of payments to return."},{"in":"query","name":"merchantReference","schema":{"type":"string"},"description":"A reference internal to the platform. Will not show up on any bank statements."},{"in":"query","name":"payerName","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PaymentLink"}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"500":{"description":"Something went wrong"}}}},"/api/v1/payment/{paymentId}":{"get":{"tags":["Payments"],"summary":"Query for a specific payment","description":"Retrieve an array of payments based on the provided query parameters","parameters":[{"in":"path","name":"paymentId","schema":{"type":"string"},"required":true,"description":"WigWag Payment ID of the payment"}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean"},"payment":{"$ref":"#/components/schemas/Payment"}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"500":{"description":"Something went wrong"}}}},"/api/v1/payment/{paymentId}/refund":{"post":{"tags":["Refunds, Payments"],"summary":"Create a refund for a payment","description":"Create a refund for a payment. The amount should be in cents. The refund will be processed immediately.","parameters":[{"in":"path","name":"paymentId","schema":{"type":"string"},"required":true,"description":"The ID of the payment"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"amount":{"type":"number","format":"integer","description":"the amount to charge in CENTS"},"reason":{"type":"enum","enum":["DUPLICATE","FRAUD","REQUESTED_BY_CUSTOMER"]}}}}}},"responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"refund":{"$ref":"#/components/schemas/Refund"}}}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"500":{"description":"Something went wrong"}}},"get":{"tags":["Refunds, Payments"],"summary":"Fetch refunds for a payment","description":"Fetch refunds for a payment.","parameters":[{"in":"path","name":"paymentId","schema":{"type":"string"},"required":true,"description":"The ID of the payment"}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"refund":{"type":"array","items":{"$ref":"#/components/schemas/Refund"}}}}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"500":{"description":"Something went wrong"}}}},"/api/v1/payment":{"get":{"tags":["Payments"],"summary":"Query for payments","description":"Retrieve an array of payments based on the provided query parameters","responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Payment"}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"500":{"description":"Something went wrong"}}}},"/api/v1/redirect-urls":{"post":{"tags":["Redirect Urls"],"summary":"Create a new Redirect URL","description":"Creates a new Redirect URL. You can optionally append one of your redirect URLs to send the user somewhere after completing the payment. \u003cbr/\u003ee.g **https://just.wigwag.me/pay/12345?redirect_url=https%3A%2F%2Fexample.com%2Fcallback**. You can only have a maximum of 5 Redirect URLs per client","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"redirectUrl":{"type":"string","description":"The Url value","example":"https://example.com/callback"}}}}}},"responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"redirectUrl":{"type":"array","item":{"type":"string"}}}}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"500":{"description":"Something went wrong"}}},"get":{"tags":["Redirect Urls"],"summary":"Fetch all Redirect URLs","description":"Retrieve an array of Redirect URLs that the client has access to","responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"redirectUrl":{"type":"array"}}}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"500":{"description":"Something went wrong"}}},"delete":{"tags":["Redirect Urls"],"summary":"Deletes a  Redirect URL","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"redirectUrl":{"type":"string","description":"The Url value","example":"https://example.com/callback"}}}}}},"responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"redirectUrl":{"type":"array","item":{"type":"string"}}}}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"500":{"description":"Something went wrong"}}}},"/api/v1/refunds/{refundId}":{"get":{"tags":["Refunds"],"summary":"Retrieve a Refund by id","description":"Retrieve a Refund by id","responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"refunds":{"$ref":"#/components/schemas/Refund"}}}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"404":{"description":"Payment not found"},"500":{"description":"Something went wrong"}}}},"/api/v1/refunds":{"get":{"tags":["Refunds"],"summary":"Retrieve all merchant Refunds","description":"Retrieve all merchant Refunds","responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"refunds":{"type":"array","items":{"$ref":"#/components/schemas/Refund"}}}}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"404":{"description":"Payment not found"},"500":{"description":"Something went wrong"}}}},"/api/v1/subscriptions/{subscriptionId}/cancel":{"post":{"tags":["Subscriptions"],"summary":"Cancel a subscription","description":"Once cancelled, a subscription cannot be re-authorised and payments will no longer be executed","parameters":[{"in":"path","name":"subscriptionId","schema":{"type":"string"},"required":true,"description":"The ID of the Subscription"}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/Subscription"}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"404":{"description":"Subscription not found"},"500":{"description":"Something went wrong"}}}},"/api/v1/subscriptions":{"post":{"tags":["Subscriptions"],"summary":"Create a new card subscription","description":"Create a new Subscription Request to save and charge cards at a specified period of time. If your subscription fails to initiate a payment the subscription will go into a \"FAILED\" state. We will retry the payment once a day for the next three days. After that, a new subscription will need to be created and authorised by the user to start initiating payments again","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"amount":{"type":"integer","description":"The payment amount in cents"},"merchantReference":{"type":"string","description":"A reference internal to the platform. Will not show up on any bank statements.","maxLength":50},"endDate":{"type":"string","format":"date-time","description":"The end date of the subscription. If this is not provided, the subscription will be indefinite","optional":true},"startDate":{"type":"string","format":"date-time","description":"The start date of the subscription"},"payerFullName":{"type":"string","maxLength":20,"description":"The full name of the payer"},"email":{"type":"string","format":"email","description":"The email of the payer"},"payerId":{"type":"string","example":"1234-1234-1234-1234","description":"The unique identifier of the payer"},"recurrence":{"oneOf":[{"$ref":"#/components/schemas/Yearly"},{"$ref":"#/components/schemas/Monthly"},{"$ref":"#/components/schemas/Weekly"}]},"initialAmount":{"type":"integer","description":"The initial payment amount in cents"}}}}}},"responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"$ref":"#/components/schemas/Subscription"}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"500":{"description":"Something went wrong"}}},"get":{"tags":["Subscriptions"],"summary":"Query for returning subscriptions","description":"Retrieve an array of subscriptions created by the merchant.","responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Subscription"}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"500":{"description":"Something went wrong"}}}},"/api/v1/token":{"post":{"security":[],"summary":"Generate a short-lived access token","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"clientId":{"type":"string","format":"uuid","example":"958fd377-3a5d-49a0-8840-eaba11ee3c19"},"clientSecret":{"type":"string","example":"qwerwrerygfghtjtywqertegrerwetrhwegvqweretewewrt43weretghgr="},"scope":{"type":"string","enum":["client_paymentrequest","client_recurringpaymentconsentrequest"],"default":"client_paymentrequest","optional":true}}}}}},"tags":["Authentication"],"description":"Retrieves a new short-lived (15min) token. Use this token in the Authorization header to access other endpoints. \u003cbr/\u003e e.g. **Authorization\\: Bearer \\\u003ctoken\\\u003e**","responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"accessToken":{"type":"string","example":"SGVsbG8hIFRoaXMgaXMgYSBmYWtlIHNlY3JldC4gTm8gdXNlIHRyeWluZyB0byB1c2UgdGhpcyA6KQ=="}}}}}}}},"400":{"description":"Invalid credentials"},"500":{"description":"Something went wrong"}}}},"/api/v1/webhook":{"post":{"tags":["webhook"],"summary":"Create a new Webhook URL","description":"Creates a new webhook. The URL will be used to send events to the client.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"url":{"type":"string","description":"The Url value","example":"https://example.com/callback"}}}}}},"responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"secret":{"type":"string","item":{"type":"string"}}}}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"No authentication found"},"403":{"description":"Invalid authentication"},"500":{"description":"Failed to create webhook"}}}},"/api/v1/withdrawal":{"post":{"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"amount":{"type":"number","example":100,"description":"Amount to withdraw in Cents"},"withdrawalType":{"$ref":"#/components/schemas/WithdrawalType"}}}}}},"tags":["Withdrawal"],"summary":"Withdraw funds from WigWag account","description":"Withdraw funds from WigWag account into your verified bank account. Amount is in Cents. Test clients will always receive success but no money will be withdrawn.","responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"Invalid credentials"},"403":{"description":"Token expired"},"500":{"description":"Error creating withdrawal requests"}}}},"/api/v1/withdrawal/max":{"post":{"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"withdrawalType":{"$ref":"#/components/schemas/WithdrawalType"}}}}}},"tags":["Withdrawal"],"summary":"Withdraw all funds from WigWag account","description":"Withdraw all funds from WigWag account into your verified bank account. Amount is in Cents. Test clients will always receive success but no money will be withdrawn.","responses":{"200":{"content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true}}}}}},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/InputError"}}}},"401":{"description":"Invalid credentials"},"403":{"description":"Token expired"},"500":{"description":"Error creating withdrawal requests"}}}}}}},"__N_SSG":true},"page":"/api-docs","query":{},"buildId":"R_VDcN4tDB50fQHDI-bJo","runtimeConfig":{"ENVIRONMENT":"production","LOGOUT_URL":"https://selfservelocal.b2clogin.com/selfservelocal.onmicrosoft.com/B2C_1_signin/oauth2/v2.0/logout","SHORTLINK_BASE_URL":"https://localhost:3000","MIXPANEL_TOKEN":"fake-secret","STITCH_STATEMENT_DETAILS":{"companyName":"Stitch Money (Pty) Ltd","address1":"1 Test Street","address2":"Testington Place","city":"Test City","postCode":"1234","vatNumber":"999999999"},"DATADOG_VERSION":"Unknown","FLAGSMITH_CLIENT_SIDE_ENV_KEY":"fake-secret"},"isFallback":false,"gsp":true,"scriptLoader":[]}<iframe src="https://www.googletagmanager.com/ns.html?id=GTM-MKTVP89" height="0" width="0" style="display:none;visibility:hidden"></iframe>